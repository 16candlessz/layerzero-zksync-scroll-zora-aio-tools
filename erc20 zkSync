// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "./IL1Token.sol";
import "zksync";

contract L1Token is IL1Token {
    using SafeERC20 for IERC20;

    address public l2Token;
    address public zkSync;

    constructor(address _zkSync, address _l2Token) {
        zkSync = _zkSync;
        l2Token = _l2Token;
    }

    function deposit(uint256 amount) external override {
        IERC20(l2Token).safeTransferFrom(msg.sender, address(this), amount);
        IERC20(l2Token).approve(zkSync, amount);
        IZkSync(zkSync).depositERC20(l2Token, amount);
    }

    function withdraw(uint256 amount) external override {
        IZkSync(zkSync).withdrawERC20(l2Token, amount);
        IERC20(l2Token).safeTransfer(msg.sender, amount);
    }
}
